# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'prob_and_stat.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import numpy as np
from PyQt5 import QtCore, QtGui, QtWidgets
from sympy import pretty, sympify, symbols
from sympy.stats import Normal,Geometric,Poisson, P, E, variance, density, entropy, variance

class Ui_Prob_and_Stat(object):

    def applyStylesheet(self, Egyenlet):
        stylesheet = """
        QMainWindow {
            background-color: #2E2E2E;
        }
        QWidget#centralwidget {
            background-color: #2E2E2E;
        }
        QLabel {
            color: #FFFFFF;
        }
        QLineEdit, QComboBox {
            background-color: #4E4E4E;
            color: #FFFFFF;
            border: 1px solid #555555;
            border-radius: 5px;
            padding: 5px;
        }
        QPushButton {
            background-color: #4E4E4E;
            color: #FFFFFF;
            border: 1px solid #555555;
            border-radius: 10px;
            padding: 10px;
        }
        QPushButton:hover {
            background-color: #5E5E5E;
        }
        QComboBox QAbstractItemView {
            background-color: #4E4E4E;
            selection-background-color: #5E5E5E;
            color: #FFFFFF;
        }
        QPushButton:pressed {
            background-color: #6E6E6E;
        }
        """
        Egyenlet.setStyleSheet(stylesheet)

    def back_to_mainwindow(self, Egyenlet, MainWindow):
        Egyenlet.close()
        MainWindow.show()

    def combobox_selector(self):
        distribution = self.comboBox_2.currentText()
        operation_type = self.comboBox.currentText()

        m = 0
        s = 0       

        if distribution == "Normál":
            m = float(self.mu.toPlainText())
            s = float(self.sigma.toPlainText())
            X = Normal('X', m, s)
            x = symbols('x')

            if operation_type == "Valószinűség":
                if self.lineEdit_2.text() == "":
                    self.label_2.setText("Adjon meg feltételt!")
                else:
                    condition = sympify(self.lineEdit_2.text(), locals={'X': X})
                    self.label_2.setText(str(P(condition)))

            elif operation_type == "Várható érték":
                self.label_2.setText(str(E(X)))

            elif operation_type == "Entrópia":
                print(str(entropy(X)))
                self.label_2.setText(str(entropy(X)))

            elif operation_type == "Variancia":
                self.label_2.setText(str(variance(X)))

            elif operation_type == "Sűrűség függvény":
                self.label_2.setText(str(density(X)(x)))
                print(density(X)(x))
            #
            
        elif distribution == "Geometriai":
            p = float(self.mu.toPlainText())
            if p <= 0.0 or p >= 1.0:
                    self.label_2.setText("A valószínűségnek 0 és 1 között kell lennie")
            else:
                X = Geometric('X', p)
                x = symbols('x')
                if operation_type == "Valószinűség":
                    if self.lineEdit_2.text() == "":
                        self.label_2.setText("Adjon meg feltételt!")
                    else:
                        condition = sympify(self.lineEdit_2.text(), locals={'X': X})
                        self.label_2.setText(str(P(condition)))
                if operation_type == "Várható érték":
                    self.label_2.setText(str(E(X)))
                elif operation_type == "Entrópia":
                    self.label_2.setText(str(entropy(X)))
                elif operation_type == "Variancia":
                    self.label_2.setText(str(variance(X)))
                elif operation_type == "Sűrűség függvény":
                    self.label_2.setText(str(density(X)(x)))

        elif distribution == "Poisson":
            λ_value = int(self.mu.toPlainText())
            X = Poisson('X', λ_value)
            x= symbols('x')
            # if operation_type == "Valószinűség":
            #     if self.lineEdit_2.text() == "":
            #         self.label_2.setText("Adjon meg feltételt!")
            #     else:
            #         condition = sympify(self.lineEdit_2.text(), locals={'X': X})
            #         self.label_2.setText(str(P(condition)))
            if operation_type == "Várható érték":
                self.label_2.setText(str(E(X)))
            elif operation_type == "Entrópia":
                self.label_2.setText(str(entropy(X).evalf()))
            elif operation_type == "Variancia":
                self.label_2.setText(str(variance(X)))
            elif operation_type == "Sűrűség függvény":
                self.label_2.setText(str(density(X)(x)))
    
    def handle_combobox2_change(self):
        if self.comboBox_2.currentText() == "Geometriai":
            self.sigma.hide()
            self.mu.setPlaceholderText("p")

        else:
            self.sigma.show()
            self.mu.setPlaceholderText("mu")

        if self.comboBox_2.currentText() == "Poisson":
            self.sigma.hide()
            self.mu.setPlaceholderText("lamda")

        else:
            self.sigma.show()
            self.mu.setPlaceholderText("mu")


    def setupUi(self, Ui_Prob_and_Stat, MainWindow):
        self.applyStylesheet(Ui_Prob_and_Stat)
        Ui_Prob_and_Stat.setObjectName("Ui_Prob_and_Stat")
        Ui_Prob_and_Stat.resize(800, 600)
        Ui_Prob_and_Stat.setMinimumSize(QtCore.QSize(800, 600))
        Ui_Prob_and_Stat.setMaximumSize(QtCore.QSize(800, 600))
        Ui_Prob_and_Stat.setWindowOpacity(1.0)
        self.centralwidget = QtWidgets.QWidget(Ui_Prob_and_Stat)
        self.centralwidget.setObjectName("centralwidget")
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(10, 40, 271, 51))
        font = QtGui.QFont()
        font.setPointSize(12)

        self.comboBox.setFont(font)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")

        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(10, 190, 780, 200))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.label_2.setTextInteractionFlags(QtCore.Qt.TextSelectableByMouse)

        self.pushButton = QtWidgets.QPushButton(self.centralwidget, clicked = lambda:self.combobox_selector())
        self.pushButton.setGeometry(QtCore.QRect(710, 40, 75, 51))
        self.pushButton.setObjectName("pushButton")

        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget, clicked = lambda:self.back_to_mainwindow(Ui_Prob_and_Stat, MainWindow))
        self.pushButton_2.setGeometry(QtCore.QRect(720, 500, 75, 51))
        self.pushButton_2.setObjectName("pushButton_2")

        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(410, 40, 281, 100))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_2.setPlaceholderText("Felétetel: X < 12")

        self.comboBox_2 = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_2.setGeometry(QtCore.QRect(10, 130, 271, 51))
        font = QtGui.QFont()
        font.setPointSize(12)

        self.comboBox_2.setFont(font)
        self.comboBox_2.setObjectName("comboBox_2")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.currentTextChanged.connect(self.handle_combobox2_change)

        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 100, 271, 21))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(14)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.mu = QtWidgets.QTextEdit(self.centralwidget)
        self.mu.setGeometry(QtCore.QRect(300, 40, 104, 45))
        self.mu.setObjectName("mu")
        self.sigma = QtWidgets.QTextEdit(self.centralwidget)
        self.sigma.setGeometry(QtCore.QRect(300, 96, 104, 45))
        self.sigma.setObjectName("sigma")
        Ui_Prob_and_Stat.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(Ui_Prob_and_Stat)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        Ui_Prob_and_Stat.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(Ui_Prob_and_Stat)
        self.statusbar.setObjectName("statusbar")
        Ui_Prob_and_Stat.setStatusBar(self.statusbar)

        self.retranslateUi(Ui_Prob_and_Stat)
        QtCore.QMetaObject.connectSlotsByName(Ui_Prob_and_Stat)
    
    

    def retranslateUi(self, Ui_Prob_and_Stat):
        _translate = QtCore.QCoreApplication.translate
        Ui_Prob_and_Stat.setWindowTitle(_translate("Ui_Prob_and_Stat", "Ui_Prob_and_Stat"))
        self.comboBox.setItemText(0, _translate("Ui_Prob_and_Stat", "Valószinűség"))
        self.comboBox.setItemText(1, _translate("Ui_Prob_and_Stat", "Várható érték"))
        self.comboBox.setItemText(2, _translate("Ui_Prob_and_Stat", "Entrópia"))
        self.comboBox.setItemText(3, _translate("Ui_Prob_and_Stat", "Variancia"))
        self.comboBox.setItemText(4, _translate("Ui_Prob_and_Stat", "Sűrűség függvény"))
        self.label_2.setText(_translate("Ui_Prob_and_Stat", "Erdemény"))
        self.pushButton.setText(_translate("Ui_Prob_and_Stat", "Enter"))
        self.pushButton_2.setText(_translate("Egyenlet", "Vissza"))
        self.comboBox_2.setItemText(0, _translate("Ui_Prob_and_Stat", "Normál"))
        self.comboBox_2.setItemText(1, _translate("Ui_Prob_and_Stat", "Geometriai"))
        self.comboBox_2.setItemText(2, _translate("Ui_Prob_and_Stat", "Poisson"))
        self.comboBox_2.setItemText(3, _translate("Ui_Prob_and_Stat", "Logaritmikus"))
        self.comboBox_2.setItemText(4, _translate("Ui_Prob_and_Stat", "Erlang"))
        self.comboBox_2.setItemText(5, _translate("Ui_Prob_and_Stat", "Pareto"))
        self.label.setText(_translate("Ui_Prob_and_Stat", "Eloszlás:"))
        self.mu.setPlaceholderText(_translate("Ui_Prob_and_Stat", "mu"))
        self.sigma.setPlaceholderText(_translate("Ui_Prob_and_Stat", "sigma"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Ui_Prob_and_Stat = QtWidgets.QMainWindow()
    ui = Ui_Prob_and_Stat()
    ui.setupUi(Ui_Prob_and_Stat)
    Ui_Prob_and_Stat.show()
    sys.exit(app.exec_())
